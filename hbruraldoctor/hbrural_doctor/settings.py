"""
Django settings for hbrural_doctor project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import logging

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$_$7y3ue6n%_w*e2@c8)9&^e2lw@rq5u-lkggd93=_ncpw^2!j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'app_login',
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hbrural_doctor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hbrural_doctor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'
#
# TIME_ZONE = 'UTC'
#
# USE_I18N = True
#
# USE_L10N = True
#
# USE_TZ = True

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# LOGGING_DIR 日志文件存放目录
LOGGING_DIR = "./hb_log"
if not os.path.exists(LOGGING_DIR):
    os.mkdir(LOGGING_DIR)

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '[%(levelname)s][%(asctime)s][%(pathname)s][%(filename)s][%(funcName)s][%(lineno)d] > %(message)s'
        },
        'simple': {
            'format': '[%(levelname)s]> %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
        'file_handler': {
            'level': 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': '%s/django.log' % LOGGING_DIR,
            'formatter': 'standard',
            'encoding': 'utf-8'
        },  # 用于文件输出
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'standard'
        },
    },
    'loggers': {
        'mdjango': {
            # 一个记录器中可以使用多个处理器
            'handlers': ['console', 'file_handler'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
    }
}

logger = logging.getLogger("mdjango")

#customize user table
AUTH_USER_MODEL = 'app_login.UserModel'
#RSA encrypt and decrypt
RSA_PUBLIC_KEY = 'MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDCblT0lwDrWcWlA5o0HsEe+7ogRZdZdYUEsNPny7/BjfEz0/QZ37FJV2xNwgSK6GgEcWkeFj44LyUGM4luvzvQb5fq54h6GSSVmvRWe5qV/Gn4gaBGEjALQVUGNF7g2Ml4Fp8Z9WWwuW+sbi/HADiroC60hwXW0EtvLlwHq9Kv4QIDAQAB'
RSA_PRIVATE_KEY = 'MIICXAIBAAKBgQDCblT0lwDrWcWlA5o0HsEe+7ogRZdZdYUEsNPny7/BjfEz0/QZ37FJV2xNwgSK6GgEcWkeFj44LyUGM4luvzvQb5fq54h6GSSVmvRWe5qV/Gn4gaBGEjALQVUGNF7g2Ml4Fp8Z9WWwuW+sbi/HADiroC60hwXW0EtvLlwHq9Kv4QIDAQABAoGARRJRF/s1Fmbz8eVPuMhcLxeaTbCrTdqUANCY1zXoz2gPkivwAekX4Egwb4dHedmKalmn0EpynB8TdhqE7lT9eDWTcy//XJeYKHMP3xmaKocitP9ySVCdC2Xs2uXw/BmCWeGj42RXAxLIOUckp4kQqJt7SHTxJ10QEZkObHJ0EckCQQDK/mNkHWZ09R988Uq+Cwxr5G+0bkImxrlrdQKUJzWevBjl2/jddtRlrJX6FZysZ+/0n0G9bjVuxpZfsQjdxz03AkEA9TOMLnto5A/LJNj/MHNz/7Ib8Xd/zu3F1BzrvA9FP3qnKvsmzwcUV1UWPZYwPwJv18ORfBl2mwhCX/a9FdzHpwJBAKapS5MT7F3ULwEW3oW/bnhaujfKWreZavzFudNHieeEiXCXNPEnMeU0WIJWIicOwtz1sDTF+kqz8xwnrp7fiOsCQFHTJ96DFFe25YWgXFhgzr7vQt/rjt0Q/8lu9UPGnMc4OPzg3uyLYkBahpd6vRLpz0TjYHNXU/scYHoBrsvS51UCQFS6Y8zE6ogl0LF4zWODgkxY2GytFk4URAQOj/ZYY27vXTgiId8kNtiodQEJ9Q5lPfVEPywncvxQlt2n2px6IcA='